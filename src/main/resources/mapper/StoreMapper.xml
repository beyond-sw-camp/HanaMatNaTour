<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.src.store.mapper.StoreMapper">

    <!-- 모든 음식점을 조회하는 쿼리 -->
    <select id="getAllStores" parameterType="map" resultType="com.example.demo.src.store.model.Store">
    SELECT
        store_id, store_name, store_address, category, like_count, avg_rating, update_at
    FROM store
    LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="getStoreById" parameterType="int" resultType="com.example.demo.src.store.model.Store">
        SELECT
            store_id, store_name, store_address, category, like_count, avg_rating, update_at
        FROM store
        WHERE store_id = #{storeId}
    </select>

    <select id="getStoresByCategory" parameterType="map" resultType="com.example.demo.src.store.model.Store">
        SELECT category, store_id, store_name, store_address, like_count, avg_rating, update_at FROM store
        WHERE category = #{category}
        ORDER BY store_name ASC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="isStoreExist" parameterType="map" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM store
        WHERE store_name = #{storeName} AND store_address = #{storeAddress}
    </select>

    <select id="isStoreInTable" parameterType="int" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM store
        WHERE store_id = #{id}
    </select>

    <insert id="addStore" parameterType="com.example.demo.src.store.model.Store">
        INSERT INTO store (store_name, store_address, category, update_at)
        VALUES (#{storeName}, #{storeAddress}, #{category}, NOW())
    </insert>


    <update id="updateStore" parameterType="com.example.demo.src.store.model.Store">
        UPDATE store
        <trim prefix="SET" suffixOverrides=",">
            <if test="storeName != null">
                store_name = #{storeName},
            </if>
            <if test="storeAddress != null">
                store_address = #{storeAddress},
            </if>
            <if test="category != null">
                category = #{category},
            </if>
            update_at = NOW()
        </trim>
        WHERE store_id = #{storeId}
    </update>

    <delete id="deleteStore"  parameterType="int">
        DELETE FROM store
        WHERE store_id = #{id}
    </delete>

    <!-- 평점 계산 및 추가를 위한 쿼리 -->
    <select id="getRatingAverage" parameterType="int" resultType="java.lang.Double">
        SELECT AVG(review_score)
        FROM reviews
        WHERE store_id = #{storeId}
    </select>

    <update id="updateStoreAvgRating">
        UPDATE store
        SET avg_rating = #{avgRating}
        WHERE store_id = #{storeId}
    </update>

    <!-- Store ID를 사용하여 Store 목록을 조회하는 쿼리 -->
    <select id="getStoresByIds" parameterType="java.util.List" resultType="com.example.demo.src.store.model.Store">
        SELECT store_id, store_name, store_address, category, like_count, avg_rating, update_at
        FROM store
        WHERE store_id IN
        <foreach item="storeId" collection="storeIds" open="(" separator="," close=")">
            #{storeId}
        </foreach>
    </select>

</mapper>