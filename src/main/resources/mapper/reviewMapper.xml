<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.example.demo.src.review.model.mapper.ReviewMapper">
    <resultMap id="reviewResultMap" type="Review">

        <id property="reviewId" column="review_id" />

        <result property="userUuid" column="user_uuid"/>
        <result property="storeId" column="store_id"/>
        <result property="reviewScore" column="review_score"/>
        <result property="reviewContents" column="review_contents"/>
        <result property="reviewImg" column="review_img"/>
        <result property="reviewDate" column="review_date"/>
    </resultMap>

    <!-- 전체 리뷰 조회 -->
    <select id="selectAllReviews" resultMap="reviewResultMap">
        SELECT
            review_id,
            user_uuid,
            store_id,
            review_score,
            review_contents,
            review_img,
            review_date
        FROM
            reviews
    </select>

    <!-- 특정 레스토랑의 리뷰 조회 -->
    <select id="selectReviewsByStoreId" parameterType="int" resultMap="reviewResultMap">
        SELECT
            review_id,
            user_uuid,
            store_id,
            review_score,
            review_contents,
            review_img,
            review_date
        FROM
            reviews
        WHERE
            store_id = #{storeId}
    </select>

    <!-- 특정 유저의 리뷰 내역 조회 -->
    <select id="selectReviewsByUserUuid" parameterType="string" resultMap="reviewResultMap">
        SELECT
            review_id,
            store_id,
            review_score,
            review_contents,
            review_img,
            review_date
        FROM
            reviews
        WHERE
            user_uuid = #{userUuid}
    </select>

    <!-- 특정 유저의 리뷰 조회(delete 체크용) -->
    <select id="selectReviewByUserUuid" parameterType="Review" resultMap="reviewResultMap">
        SELECT
            review_id,
            user_uuid
        FROM
            reviews
        WHERE
            user_uuid = #{userUuid}
        AND
            review_id = #{reviewId}
    </select>

    <!-- 단일 리뷰 조회 -->
    <select id="selectReviewByReviewId" parameterType="int" resultMap="reviewResultMap">
        SELECT
            review_id,
            user_uuid,
            store_id,
            review_score,
            review_contents,
            review_img,
            review_date
        FROM
            reviews
        WHERE
            review_id = #{reviewId}
    </select>

    <!-- 리뷰 작성 -->
    <insert id="insertReview" parameterType="Review">
        INSERT INTO reviews (
            user_uuid,
            store_id,
            review_score,
            review_contents,
            review_img
        ) VALUES (
                     #{userUuid},
                     #{storeId},
                     #{reviewScore},
                     #{reviewContents},
                     #{reviewImg}
                 )
    </insert>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="Review">
        UPDATE reviews
        SET
            store_id = #{storeId},
            review_score = #{reviewScore},
            review_contents = #{reviewContents},
            review_img = #{reviewImg}
        WHERE
            review_id = #{reviewId}
          AND user_uuid = #{userUuid}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM reviews
        WHERE
            review_id = #{reviewId}
    </delete>

</mapper>

